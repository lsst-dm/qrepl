@0xf0816e8a06666288; # unique file ID, generated by `capnp id`

using Cxx = import "/capnp/c++.capnp";
$Cxx.namespace("lsst::qserv::qdht::proto");

#
#----- The basic wrapper message class contains a sender, target, client ID, and a client-specific body
#

struct RoutePoint {
    id @0 :Data;
    addr @1 :Data;
    port @2 :UInt16;
}

struct Message {
    sender @0 :RoutePoint;
    target @1 :Data;
    clientId @2 :UInt32;
    body @3 :AnyPointer;
}

#
#----- "Internal" message class is used by qdht itself for join and route maintenance protocols
#

const internalClient :UInt32 = 0x54484451;

struct Internal {
    union {
        join @0 :Void;
        heartbeat @1 :Void;
    }
}
